// source: feast/core/InfraObject.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var feast_core_DatastoreTable_pb = require('../../feast/core/DatastoreTable_pb.js');
goog.object.extend(proto, feast_core_DatastoreTable_pb);
var feast_core_DynamoDBTable_pb = require('../../feast/core/DynamoDBTable_pb.js');
goog.object.extend(proto, feast_core_DynamoDBTable_pb);
var feast_core_SqliteTable_pb = require('../../feast/core/SqliteTable_pb.js');
goog.object.extend(proto, feast_core_SqliteTable_pb);
goog.exportSymbol('proto.feast.core.Infra', null, global);
goog.exportSymbol('proto.feast.core.InfraObject', null, global);
goog.exportSymbol('proto.feast.core.InfraObject.CustomInfra', null, global);
goog.exportSymbol('proto.feast.core.InfraObject.InfraObjectCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.Infra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.core.Infra.repeatedFields_, null);
};
goog.inherits(proto.feast.core.Infra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.Infra.displayName = 'proto.feast.core.Infra';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.InfraObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.feast.core.InfraObject.oneofGroups_);
};
goog.inherits(proto.feast.core.InfraObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.InfraObject.displayName = 'proto.feast.core.InfraObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.InfraObject.CustomInfra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.core.InfraObject.CustomInfra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.InfraObject.CustomInfra.displayName = 'proto.feast.core.InfraObject.CustomInfra';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.core.Infra.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.Infra.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.Infra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.Infra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.Infra.toObject = function(includeInstance, msg) {
  var f, obj = {
    infraObjectsList: jspb.Message.toObjectList(msg.getInfraObjectsList(),
    proto.feast.core.InfraObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.Infra}
 */
proto.feast.core.Infra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.Infra;
  return proto.feast.core.Infra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.Infra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.Infra}
 */
proto.feast.core.Infra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.feast.core.InfraObject;
      reader.readMessage(value,proto.feast.core.InfraObject.deserializeBinaryFromReader);
      msg.addInfraObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.Infra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.Infra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.Infra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.Infra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfraObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.feast.core.InfraObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InfraObject infra_objects = 1;
 * @return {!Array<!proto.feast.core.InfraObject>}
 */
proto.feast.core.Infra.prototype.getInfraObjectsList = function() {
  return /** @type{!Array<!proto.feast.core.InfraObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.feast.core.InfraObject, 1));
};


/**
 * @param {!Array<!proto.feast.core.InfraObject>} value
 * @return {!proto.feast.core.Infra} returns this
*/
proto.feast.core.Infra.prototype.setInfraObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.feast.core.InfraObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.core.InfraObject}
 */
proto.feast.core.Infra.prototype.addInfraObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.feast.core.InfraObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.core.Infra} returns this
 */
proto.feast.core.Infra.prototype.clearInfraObjectsList = function() {
  return this.setInfraObjectsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.feast.core.InfraObject.oneofGroups_ = [[2,3,4,100]];

/**
 * @enum {number}
 */
proto.feast.core.InfraObject.InfraObjectCase = {
  INFRA_OBJECT_NOT_SET: 0,
  DYNAMODB_TABLE: 2,
  DATASTORE_TABLE: 3,
  SQLITE_TABLE: 4,
  CUSTOM_INFRA: 100
};

/**
 * @return {proto.feast.core.InfraObject.InfraObjectCase}
 */
proto.feast.core.InfraObject.prototype.getInfraObjectCase = function() {
  return /** @type {proto.feast.core.InfraObject.InfraObjectCase} */(jspb.Message.computeOneofCase(this, proto.feast.core.InfraObject.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.InfraObject.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.InfraObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.InfraObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.InfraObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    infraObjectClassType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dynamodbTable: (f = msg.getDynamodbTable()) && feast_core_DynamoDBTable_pb.DynamoDBTable.toObject(includeInstance, f),
    datastoreTable: (f = msg.getDatastoreTable()) && feast_core_DatastoreTable_pb.DatastoreTable.toObject(includeInstance, f),
    sqliteTable: (f = msg.getSqliteTable()) && feast_core_SqliteTable_pb.SqliteTable.toObject(includeInstance, f),
    customInfra: (f = msg.getCustomInfra()) && proto.feast.core.InfraObject.CustomInfra.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.InfraObject}
 */
proto.feast.core.InfraObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.InfraObject;
  return proto.feast.core.InfraObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.InfraObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.InfraObject}
 */
proto.feast.core.InfraObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfraObjectClassType(value);
      break;
    case 2:
      var value = new feast_core_DynamoDBTable_pb.DynamoDBTable;
      reader.readMessage(value,feast_core_DynamoDBTable_pb.DynamoDBTable.deserializeBinaryFromReader);
      msg.setDynamodbTable(value);
      break;
    case 3:
      var value = new feast_core_DatastoreTable_pb.DatastoreTable;
      reader.readMessage(value,feast_core_DatastoreTable_pb.DatastoreTable.deserializeBinaryFromReader);
      msg.setDatastoreTable(value);
      break;
    case 4:
      var value = new feast_core_SqliteTable_pb.SqliteTable;
      reader.readMessage(value,feast_core_SqliteTable_pb.SqliteTable.deserializeBinaryFromReader);
      msg.setSqliteTable(value);
      break;
    case 100:
      var value = new proto.feast.core.InfraObject.CustomInfra;
      reader.readMessage(value,proto.feast.core.InfraObject.CustomInfra.deserializeBinaryFromReader);
      msg.setCustomInfra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.InfraObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.InfraObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.InfraObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.InfraObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfraObjectClassType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDynamodbTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      feast_core_DynamoDBTable_pb.DynamoDBTable.serializeBinaryToWriter
    );
  }
  f = message.getDatastoreTable();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      feast_core_DatastoreTable_pb.DatastoreTable.serializeBinaryToWriter
    );
  }
  f = message.getSqliteTable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      feast_core_SqliteTable_pb.SqliteTable.serializeBinaryToWriter
    );
  }
  f = message.getCustomInfra();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.feast.core.InfraObject.CustomInfra.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.InfraObject.CustomInfra.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.InfraObject.CustomInfra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.InfraObject.CustomInfra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.InfraObject.CustomInfra.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: msg.getField_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.InfraObject.CustomInfra}
 */
proto.feast.core.InfraObject.CustomInfra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.InfraObject.CustomInfra;
  return proto.feast.core.InfraObject.CustomInfra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.InfraObject.CustomInfra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.InfraObject.CustomInfra}
 */
proto.feast.core.InfraObject.CustomInfra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.InfraObject.CustomInfra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.InfraObject.CustomInfra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.InfraObject.CustomInfra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.InfraObject.CustomInfra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes field = 1;
 * @return {string}
 */
proto.feast.core.InfraObject.CustomInfra.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes field = 1;
 * This is a type-conversion wrapper around `getField()`
 * @return {string}
 */
proto.feast.core.InfraObject.CustomInfra.prototype.getField_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getField()));
};


/**
 * optional bytes field = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getField()`
 * @return {!Uint8Array}
 */
proto.feast.core.InfraObject.CustomInfra.prototype.getField_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getField()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.feast.core.InfraObject.CustomInfra} returns this
 */
proto.feast.core.InfraObject.CustomInfra.prototype.setField = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string infra_object_class_type = 1;
 * @return {string}
 */
proto.feast.core.InfraObject.prototype.getInfraObjectClassType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.core.InfraObject} returns this
 */
proto.feast.core.InfraObject.prototype.setInfraObjectClassType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DynamoDBTable dynamodb_table = 2;
 * @return {?proto.feast.core.DynamoDBTable}
 */
proto.feast.core.InfraObject.prototype.getDynamodbTable = function() {
  return /** @type{?proto.feast.core.DynamoDBTable} */ (
    jspb.Message.getWrapperField(this, feast_core_DynamoDBTable_pb.DynamoDBTable, 2));
};


/**
 * @param {?proto.feast.core.DynamoDBTable|undefined} value
 * @return {!proto.feast.core.InfraObject} returns this
*/
proto.feast.core.InfraObject.prototype.setDynamodbTable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.feast.core.InfraObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.InfraObject} returns this
 */
proto.feast.core.InfraObject.prototype.clearDynamodbTable = function() {
  return this.setDynamodbTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.InfraObject.prototype.hasDynamodbTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DatastoreTable datastore_table = 3;
 * @return {?proto.feast.core.DatastoreTable}
 */
proto.feast.core.InfraObject.prototype.getDatastoreTable = function() {
  return /** @type{?proto.feast.core.DatastoreTable} */ (
    jspb.Message.getWrapperField(this, feast_core_DatastoreTable_pb.DatastoreTable, 3));
};


/**
 * @param {?proto.feast.core.DatastoreTable|undefined} value
 * @return {!proto.feast.core.InfraObject} returns this
*/
proto.feast.core.InfraObject.prototype.setDatastoreTable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.feast.core.InfraObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.InfraObject} returns this
 */
proto.feast.core.InfraObject.prototype.clearDatastoreTable = function() {
  return this.setDatastoreTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.InfraObject.prototype.hasDatastoreTable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SqliteTable sqlite_table = 4;
 * @return {?proto.feast.core.SqliteTable}
 */
proto.feast.core.InfraObject.prototype.getSqliteTable = function() {
  return /** @type{?proto.feast.core.SqliteTable} */ (
    jspb.Message.getWrapperField(this, feast_core_SqliteTable_pb.SqliteTable, 4));
};


/**
 * @param {?proto.feast.core.SqliteTable|undefined} value
 * @return {!proto.feast.core.InfraObject} returns this
*/
proto.feast.core.InfraObject.prototype.setSqliteTable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.feast.core.InfraObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.InfraObject} returns this
 */
proto.feast.core.InfraObject.prototype.clearSqliteTable = function() {
  return this.setSqliteTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.InfraObject.prototype.hasSqliteTable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CustomInfra custom_infra = 100;
 * @return {?proto.feast.core.InfraObject.CustomInfra}
 */
proto.feast.core.InfraObject.prototype.getCustomInfra = function() {
  return /** @type{?proto.feast.core.InfraObject.CustomInfra} */ (
    jspb.Message.getWrapperField(this, proto.feast.core.InfraObject.CustomInfra, 100));
};


/**
 * @param {?proto.feast.core.InfraObject.CustomInfra|undefined} value
 * @return {!proto.feast.core.InfraObject} returns this
*/
proto.feast.core.InfraObject.prototype.setCustomInfra = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.feast.core.InfraObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.InfraObject} returns this
 */
proto.feast.core.InfraObject.prototype.clearCustomInfra = function() {
  return this.setCustomInfra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.InfraObject.prototype.hasCustomInfra = function() {
  return jspb.Message.getField(this, 100) != null;
};


goog.object.extend(exports, proto.feast.core);
