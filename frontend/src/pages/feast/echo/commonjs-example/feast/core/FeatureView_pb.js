// source: feast/core/FeatureView.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var feast_core_DataSource_pb = require('../../feast/core/DataSource_pb.js');
goog.object.extend(proto, feast_core_DataSource_pb);
var feast_core_Feature_pb = require('../../feast/core/Feature_pb.js');
goog.object.extend(proto, feast_core_Feature_pb);
goog.exportSymbol('proto.feast.core.FeatureView', null, global);
goog.exportSymbol('proto.feast.core.FeatureViewMeta', null, global);
goog.exportSymbol('proto.feast.core.FeatureViewSpec', null, global);
goog.exportSymbol('proto.feast.core.MaterializationInterval', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.FeatureView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.core.FeatureView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.FeatureView.displayName = 'proto.feast.core.FeatureView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.FeatureViewSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.core.FeatureViewSpec.repeatedFields_, null);
};
goog.inherits(proto.feast.core.FeatureViewSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.FeatureViewSpec.displayName = 'proto.feast.core.FeatureViewSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.FeatureViewMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.core.FeatureViewMeta.repeatedFields_, null);
};
goog.inherits(proto.feast.core.FeatureViewMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.FeatureViewMeta.displayName = 'proto.feast.core.FeatureViewMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.core.MaterializationInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.core.MaterializationInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.core.MaterializationInterval.displayName = 'proto.feast.core.MaterializationInterval';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.FeatureView.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.FeatureView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.FeatureView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureView.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.feast.core.FeatureViewSpec.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.feast.core.FeatureViewMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.FeatureView}
 */
proto.feast.core.FeatureView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.FeatureView;
  return proto.feast.core.FeatureView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.FeatureView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.FeatureView}
 */
proto.feast.core.FeatureView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.feast.core.FeatureViewSpec;
      reader.readMessage(value,proto.feast.core.FeatureViewSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new proto.feast.core.FeatureViewMeta;
      reader.readMessage(value,proto.feast.core.FeatureViewMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.FeatureView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.FeatureView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.FeatureView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.feast.core.FeatureViewSpec.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.feast.core.FeatureViewMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeatureViewSpec spec = 1;
 * @return {?proto.feast.core.FeatureViewSpec}
 */
proto.feast.core.FeatureView.prototype.getSpec = function() {
  return /** @type{?proto.feast.core.FeatureViewSpec} */ (
    jspb.Message.getWrapperField(this, proto.feast.core.FeatureViewSpec, 1));
};


/**
 * @param {?proto.feast.core.FeatureViewSpec|undefined} value
 * @return {!proto.feast.core.FeatureView} returns this
*/
proto.feast.core.FeatureView.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureView} returns this
 */
proto.feast.core.FeatureView.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureView.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeatureViewMeta meta = 2;
 * @return {?proto.feast.core.FeatureViewMeta}
 */
proto.feast.core.FeatureView.prototype.getMeta = function() {
  return /** @type{?proto.feast.core.FeatureViewMeta} */ (
    jspb.Message.getWrapperField(this, proto.feast.core.FeatureViewMeta, 2));
};


/**
 * @param {?proto.feast.core.FeatureViewMeta|undefined} value
 * @return {!proto.feast.core.FeatureView} returns this
*/
proto.feast.core.FeatureView.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureView} returns this
 */
proto.feast.core.FeatureView.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureView.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.core.FeatureViewSpec.repeatedFields_ = [3,4,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.FeatureViewSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.FeatureViewSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.FeatureViewSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureViewSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    project: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    feast_core_Feature_pb.FeatureSpecV2.toObject, includeInstance),
    entityColumnsList: jspb.Message.toObjectList(msg.getEntityColumnsList(),
    feast_core_Feature_pb.FeatureSpecV2.toObject, includeInstance),
    description: jspb.Message.getFieldWithDefault(msg, 10, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    owner: jspb.Message.getFieldWithDefault(msg, 11, ""),
    ttl: (f = msg.getTtl()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    batchSource: (f = msg.getBatchSource()) && feast_core_DataSource_pb.DataSource.toObject(includeInstance, f),
    streamSource: (f = msg.getStreamSource()) && feast_core_DataSource_pb.DataSource.toObject(includeInstance, f),
    online: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.FeatureViewSpec}
 */
proto.feast.core.FeatureViewSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.FeatureViewSpec;
  return proto.feast.core.FeatureViewSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.FeatureViewSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.FeatureViewSpec}
 */
proto.feast.core.FeatureViewSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntities(value);
      break;
    case 4:
      var value = new feast_core_Feature_pb.FeatureSpecV2;
      reader.readMessage(value,feast_core_Feature_pb.FeatureSpecV2.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    case 12:
      var value = new feast_core_Feature_pb.FeatureSpecV2;
      reader.readMessage(value,feast_core_Feature_pb.FeatureSpecV2.deserializeBinaryFromReader);
      msg.addEntityColumns(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTtl(value);
      break;
    case 7:
      var value = new feast_core_DataSource_pb.DataSource;
      reader.readMessage(value,feast_core_DataSource_pb.DataSource.deserializeBinaryFromReader);
      msg.setBatchSource(value);
      break;
    case 9:
      var value = new feast_core_DataSource_pb.DataSource;
      reader.readMessage(value,feast_core_DataSource_pb.DataSource.deserializeBinaryFromReader);
      msg.setStreamSource(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.FeatureViewSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.FeatureViewSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.FeatureViewSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureViewSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      feast_core_Feature_pb.FeatureSpecV2.serializeBinaryToWriter
    );
  }
  f = message.getEntityColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      feast_core_Feature_pb.FeatureSpecV2.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTtl();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getBatchSource();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      feast_core_DataSource_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getStreamSource();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      feast_core_DataSource_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.feast.core.FeatureViewSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.feast.core.FeatureViewSpec.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string entities = 3;
 * @return {!Array<string>}
 */
proto.feast.core.FeatureViewSpec.prototype.getEntitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setEntitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.addEntities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * repeated FeatureSpecV2 features = 4;
 * @return {!Array<!proto.feast.core.FeatureSpecV2>}
 */
proto.feast.core.FeatureViewSpec.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.feast.core.FeatureSpecV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, feast_core_Feature_pb.FeatureSpecV2, 4));
};


/**
 * @param {!Array<!proto.feast.core.FeatureSpecV2>} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
*/
proto.feast.core.FeatureViewSpec.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.feast.core.FeatureSpecV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.core.FeatureSpecV2}
 */
proto.feast.core.FeatureViewSpec.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.feast.core.FeatureSpecV2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * repeated FeatureSpecV2 entity_columns = 12;
 * @return {!Array<!proto.feast.core.FeatureSpecV2>}
 */
proto.feast.core.FeatureViewSpec.prototype.getEntityColumnsList = function() {
  return /** @type{!Array<!proto.feast.core.FeatureSpecV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, feast_core_Feature_pb.FeatureSpecV2, 12));
};


/**
 * @param {!Array<!proto.feast.core.FeatureSpecV2>} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
*/
proto.feast.core.FeatureViewSpec.prototype.setEntityColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.feast.core.FeatureSpecV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.core.FeatureSpecV2}
 */
proto.feast.core.FeatureViewSpec.prototype.addEntityColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.feast.core.FeatureSpecV2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearEntityColumnsList = function() {
  return this.setEntityColumnsList([]);
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.feast.core.FeatureViewSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * map<string, string> tags = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.feast.core.FeatureViewSpec.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;
};


/**
 * optional string owner = 11;
 * @return {string}
 */
proto.feast.core.FeatureViewSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Duration ttl = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.feast.core.FeatureViewSpec.prototype.getTtl = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
*/
proto.feast.core.FeatureViewSpec.prototype.setTtl = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearTtl = function() {
  return this.setTtl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureViewSpec.prototype.hasTtl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DataSource batch_source = 7;
 * @return {?proto.feast.core.DataSource}
 */
proto.feast.core.FeatureViewSpec.prototype.getBatchSource = function() {
  return /** @type{?proto.feast.core.DataSource} */ (
    jspb.Message.getWrapperField(this, feast_core_DataSource_pb.DataSource, 7));
};


/**
 * @param {?proto.feast.core.DataSource|undefined} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
*/
proto.feast.core.FeatureViewSpec.prototype.setBatchSource = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearBatchSource = function() {
  return this.setBatchSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureViewSpec.prototype.hasBatchSource = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DataSource stream_source = 9;
 * @return {?proto.feast.core.DataSource}
 */
proto.feast.core.FeatureViewSpec.prototype.getStreamSource = function() {
  return /** @type{?proto.feast.core.DataSource} */ (
    jspb.Message.getWrapperField(this, feast_core_DataSource_pb.DataSource, 9));
};


/**
 * @param {?proto.feast.core.DataSource|undefined} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
*/
proto.feast.core.FeatureViewSpec.prototype.setStreamSource = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.clearStreamSource = function() {
  return this.setStreamSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureViewSpec.prototype.hasStreamSource = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool online = 8;
 * @return {boolean}
 */
proto.feast.core.FeatureViewSpec.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.feast.core.FeatureViewSpec} returns this
 */
proto.feast.core.FeatureViewSpec.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.core.FeatureViewMeta.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.FeatureViewMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.FeatureViewMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.FeatureViewMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureViewMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdTimestamp: (f = msg.getCreatedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUpdatedTimestamp: (f = msg.getLastUpdatedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    materializationIntervalsList: jspb.Message.toObjectList(msg.getMaterializationIntervalsList(),
    proto.feast.core.MaterializationInterval.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.FeatureViewMeta}
 */
proto.feast.core.FeatureViewMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.FeatureViewMeta;
  return proto.feast.core.FeatureViewMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.FeatureViewMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.FeatureViewMeta}
 */
proto.feast.core.FeatureViewMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedTimestamp(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdatedTimestamp(value);
      break;
    case 3:
      var value = new proto.feast.core.MaterializationInterval;
      reader.readMessage(value,proto.feast.core.MaterializationInterval.deserializeBinaryFromReader);
      msg.addMaterializationIntervals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.FeatureViewMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.FeatureViewMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.FeatureViewMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.FeatureViewMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdatedTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMaterializationIntervalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.feast.core.MaterializationInterval.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.feast.core.FeatureViewMeta.prototype.getCreatedTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.feast.core.FeatureViewMeta} returns this
*/
proto.feast.core.FeatureViewMeta.prototype.setCreatedTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureViewMeta} returns this
 */
proto.feast.core.FeatureViewMeta.prototype.clearCreatedTimestamp = function() {
  return this.setCreatedTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureViewMeta.prototype.hasCreatedTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp last_updated_timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.feast.core.FeatureViewMeta.prototype.getLastUpdatedTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.feast.core.FeatureViewMeta} returns this
*/
proto.feast.core.FeatureViewMeta.prototype.setLastUpdatedTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.FeatureViewMeta} returns this
 */
proto.feast.core.FeatureViewMeta.prototype.clearLastUpdatedTimestamp = function() {
  return this.setLastUpdatedTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.FeatureViewMeta.prototype.hasLastUpdatedTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MaterializationInterval materialization_intervals = 3;
 * @return {!Array<!proto.feast.core.MaterializationInterval>}
 */
proto.feast.core.FeatureViewMeta.prototype.getMaterializationIntervalsList = function() {
  return /** @type{!Array<!proto.feast.core.MaterializationInterval>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.feast.core.MaterializationInterval, 3));
};


/**
 * @param {!Array<!proto.feast.core.MaterializationInterval>} value
 * @return {!proto.feast.core.FeatureViewMeta} returns this
*/
proto.feast.core.FeatureViewMeta.prototype.setMaterializationIntervalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.feast.core.MaterializationInterval=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.core.MaterializationInterval}
 */
proto.feast.core.FeatureViewMeta.prototype.addMaterializationIntervals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.feast.core.MaterializationInterval, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.core.FeatureViewMeta} returns this
 */
proto.feast.core.FeatureViewMeta.prototype.clearMaterializationIntervalsList = function() {
  return this.setMaterializationIntervalsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.core.MaterializationInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.core.MaterializationInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.core.MaterializationInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.MaterializationInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.core.MaterializationInterval}
 */
proto.feast.core.MaterializationInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.core.MaterializationInterval;
  return proto.feast.core.MaterializationInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.core.MaterializationInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.core.MaterializationInterval}
 */
proto.feast.core.MaterializationInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.core.MaterializationInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.core.MaterializationInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.core.MaterializationInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.core.MaterializationInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.feast.core.MaterializationInterval.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.feast.core.MaterializationInterval} returns this
*/
proto.feast.core.MaterializationInterval.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.MaterializationInterval} returns this
 */
proto.feast.core.MaterializationInterval.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.MaterializationInterval.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.feast.core.MaterializationInterval.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.feast.core.MaterializationInterval} returns this
*/
proto.feast.core.MaterializationInterval.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.core.MaterializationInterval} returns this
 */
proto.feast.core.MaterializationInterval.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.core.MaterializationInterval.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.feast.core);
