// source: feast/serving/ServingService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var feast_types_Value_pb = require('../../feast/types/Value_pb.js');
goog.object.extend(proto, feast_types_Value_pb);
goog.exportSymbol('proto.feast.serving.FeatureList', null, global);
goog.exportSymbol('proto.feast.serving.FeatureReferenceV2', null, global);
goog.exportSymbol('proto.feast.serving.FieldStatus', null, global);
goog.exportSymbol('proto.feast.serving.GetFeastServingInfoRequest', null, global);
goog.exportSymbol('proto.feast.serving.GetFeastServingInfoResponse', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesRequest', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesRequest.KindCase', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesRequestV2', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesResponse', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector', null, global);
goog.exportSymbol('proto.feast.serving.GetOnlineFeaturesResponseMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetFeastServingInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.serving.GetFeastServingInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetFeastServingInfoRequest.displayName = 'proto.feast.serving.GetFeastServingInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetFeastServingInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.serving.GetFeastServingInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetFeastServingInfoResponse.displayName = 'proto.feast.serving.GetFeastServingInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.FeatureReferenceV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.serving.FeatureReferenceV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.FeatureReferenceV2.displayName = 'proto.feast.serving.FeatureReferenceV2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.serving.GetOnlineFeaturesRequestV2.repeatedFields_, null);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesRequestV2.displayName = 'proto.feast.serving.GetOnlineFeaturesRequestV2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.displayName = 'proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.FeatureList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.serving.FeatureList.repeatedFields_, null);
};
goog.inherits(proto.feast.serving.FeatureList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.FeatureList.displayName = 'proto.feast.serving.FeatureList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesRequest.displayName = 'proto.feast.serving.GetOnlineFeaturesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.serving.GetOnlineFeaturesResponse.repeatedFields_, null);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesResponse.displayName = 'proto.feast.serving.GetOnlineFeaturesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.repeatedFields_, null);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.displayName = 'proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feast.serving.GetOnlineFeaturesResponseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feast.serving.GetOnlineFeaturesResponseMetadata.displayName = 'proto.feast.serving.GetOnlineFeaturesResponseMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetFeastServingInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetFeastServingInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetFeastServingInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetFeastServingInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetFeastServingInfoRequest}
 */
proto.feast.serving.GetFeastServingInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetFeastServingInfoRequest;
  return proto.feast.serving.GetFeastServingInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetFeastServingInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetFeastServingInfoRequest}
 */
proto.feast.serving.GetFeastServingInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetFeastServingInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetFeastServingInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetFeastServingInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetFeastServingInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetFeastServingInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetFeastServingInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetFeastServingInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetFeastServingInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetFeastServingInfoResponse}
 */
proto.feast.serving.GetFeastServingInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetFeastServingInfoResponse;
  return proto.feast.serving.GetFeastServingInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetFeastServingInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetFeastServingInfoResponse}
 */
proto.feast.serving.GetFeastServingInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetFeastServingInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetFeastServingInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetFeastServingInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetFeastServingInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.feast.serving.GetFeastServingInfoResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.serving.GetFeastServingInfoResponse} returns this
 */
proto.feast.serving.GetFeastServingInfoResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.FeatureReferenceV2.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.FeatureReferenceV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.FeatureReferenceV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.FeatureReferenceV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureViewName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.FeatureReferenceV2}
 */
proto.feast.serving.FeatureReferenceV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.FeatureReferenceV2;
  return proto.feast.serving.FeatureReferenceV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.FeatureReferenceV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.FeatureReferenceV2}
 */
proto.feast.serving.FeatureReferenceV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureViewName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.FeatureReferenceV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.FeatureReferenceV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.FeatureReferenceV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.FeatureReferenceV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureViewName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string feature_view_name = 1;
 * @return {string}
 */
proto.feast.serving.FeatureReferenceV2.prototype.getFeatureViewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.serving.FeatureReferenceV2} returns this
 */
proto.feast.serving.FeatureReferenceV2.prototype.setFeatureViewName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string feature_name = 2;
 * @return {string}
 */
proto.feast.serving.FeatureReferenceV2.prototype.getFeatureName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.serving.FeatureReferenceV2} returns this
 */
proto.feast.serving.FeatureReferenceV2.prototype.setFeatureName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.repeatedFields_ = [4,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.feast.serving.FeatureReferenceV2.toObject, includeInstance),
    entityRowsList: jspb.Message.toObjectList(msg.getEntityRowsList(),
    proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.toObject, includeInstance),
    project: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesRequestV2;
  return proto.feast.serving.GetOnlineFeaturesRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.feast.serving.FeatureReferenceV2;
      reader.readMessage(value,proto.feast.serving.FeatureReferenceV2.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    case 2:
      var value = new proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow;
      reader.readMessage(value,proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.deserializeBinaryFromReader);
      msg.addEntityRows(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.feast.serving.FeatureReferenceV2.serializeBinaryToWriter
    );
  }
  f = message.getEntityRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.serializeBinaryToWriter
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.feast.types.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow;
  return proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.feast.types.Value.deserializeBinaryFromReader, "", new proto.feast.types.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.feast.types.Value.serializeBinaryToWriter);
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} returns this
*/
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, feast.types.Value> fields = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.feast.types.Value>}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.feast.types.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.feast.types.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;
};


/**
 * repeated FeatureReferenceV2 features = 4;
 * @return {!Array<!proto.feast.serving.FeatureReferenceV2>}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.feast.serving.FeatureReferenceV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.feast.serving.FeatureReferenceV2, 4));
};


/**
 * @param {!Array<!proto.feast.serving.FeatureReferenceV2>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2} returns this
*/
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.feast.serving.FeatureReferenceV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.serving.FeatureReferenceV2}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.feast.serving.FeatureReferenceV2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * repeated EntityRow entity_rows = 2;
 * @return {!Array<!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow>}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.getEntityRowsList = function() {
  return /** @type{!Array<!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow, 2));
};


/**
 * @param {!Array<!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2} returns this
*/
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.setEntityRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.addEntityRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.feast.serving.GetOnlineFeaturesRequestV2.EntityRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.clearEntityRowsList = function() {
  return this.setEntityRowsList([]);
};


/**
 * optional string project = 5;
 * @return {string}
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequestV2} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequestV2.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.serving.FeatureList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.FeatureList.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.FeatureList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.FeatureList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.FeatureList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.FeatureList}
 */
proto.feast.serving.FeatureList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.FeatureList;
  return proto.feast.serving.FeatureList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.FeatureList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.FeatureList}
 */
proto.feast.serving.FeatureList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.FeatureList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.FeatureList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.FeatureList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.FeatureList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string val = 1;
 * @return {!Array<string>}
 */
proto.feast.serving.FeatureList.prototype.getValList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.feast.serving.FeatureList} returns this
 */
proto.feast.serving.FeatureList.prototype.setValList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.feast.serving.FeatureList} returns this
 */
proto.feast.serving.FeatureList.prototype.addVal = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.FeatureList} returns this
 */
proto.feast.serving.FeatureList.prototype.clearValList = function() {
  return this.setValList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.feast.serving.GetOnlineFeaturesRequest.KindCase = {
  KIND_NOT_SET: 0,
  FEATURE_SERVICE: 1,
  FEATURES: 2
};

/**
 * @return {proto.feast.serving.GetOnlineFeaturesRequest.KindCase}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getKindCase = function() {
  return /** @type {proto.feast.serving.GetOnlineFeaturesRequest.KindCase} */(jspb.Message.computeOneofCase(this, proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureService: jspb.Message.getFieldWithDefault(msg, 1, ""),
    features: (f = msg.getFeatures()) && proto.feast.serving.FeatureList.toObject(includeInstance, f),
    entitiesMap: (f = msg.getEntitiesMap()) ? f.toObject(includeInstance, proto.feast.types.RepeatedValue.toObject) : [],
    fullFeatureNames: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    requestContextMap: (f = msg.getRequestContextMap()) ? f.toObject(includeInstance, proto.feast.types.RepeatedValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest}
 */
proto.feast.serving.GetOnlineFeaturesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesRequest;
  return proto.feast.serving.GetOnlineFeaturesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest}
 */
proto.feast.serving.GetOnlineFeaturesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureService(value);
      break;
    case 2:
      var value = new proto.feast.serving.FeatureList;
      reader.readMessage(value,proto.feast.serving.FeatureList.deserializeBinaryFromReader);
      msg.setFeatures(value);
      break;
    case 3:
      var value = msg.getEntitiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.feast.types.RepeatedValue.deserializeBinaryFromReader, "", new proto.feast.types.RepeatedValue());
         });
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullFeatureNames(value);
      break;
    case 5:
      var value = msg.getRequestContextMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.feast.types.RepeatedValue.deserializeBinaryFromReader, "", new proto.feast.types.RepeatedValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatures();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.feast.serving.FeatureList.serializeBinaryToWriter
    );
  }
  f = message.getEntitiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.feast.types.RepeatedValue.serializeBinaryToWriter);
  }
  f = message.getFullFeatureNames();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRequestContextMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.feast.types.RepeatedValue.serializeBinaryToWriter);
  }
};


/**
 * optional string feature_service = 1;
 * @return {string}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getFeatureService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.setFeatureService = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.clearFeatureService = function() {
  return jspb.Message.setOneofField(this, 1, proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.hasFeatureService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeatureList features = 2;
 * @return {?proto.feast.serving.FeatureList}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getFeatures = function() {
  return /** @type{?proto.feast.serving.FeatureList} */ (
    jspb.Message.getWrapperField(this, proto.feast.serving.FeatureList, 2));
};


/**
 * @param {?proto.feast.serving.FeatureList|undefined} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
*/
proto.feast.serving.GetOnlineFeaturesRequest.prototype.setFeatures = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.feast.serving.GetOnlineFeaturesRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.clearFeatures = function() {
  return this.setFeatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, feast.types.RepeatedValue> entities = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.feast.types.RepeatedValue>}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getEntitiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.feast.types.RepeatedValue>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.feast.types.RepeatedValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.clearEntitiesMap = function() {
  this.getEntitiesMap().clear();
  return this;
};


/**
 * optional bool full_feature_names = 4;
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getFullFeatureNames = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.setFullFeatureNames = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, feast.types.RepeatedValue> request_context = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.feast.types.RepeatedValue>}
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.getRequestContextMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.feast.types.RepeatedValue>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.feast.types.RepeatedValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesRequest} returns this
 */
proto.feast.serving.GetOnlineFeaturesRequest.prototype.clearRequestContextMap = function() {
  this.getRequestContextMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.serving.GetOnlineFeaturesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.feast.serving.GetOnlineFeaturesResponseMetadata.toObject(includeInstance, f),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.toObject, includeInstance),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse}
 */
proto.feast.serving.GetOnlineFeaturesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesResponse;
  return proto.feast.serving.GetOnlineFeaturesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse}
 */
proto.feast.serving.GetOnlineFeaturesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.feast.serving.GetOnlineFeaturesResponseMetadata;
      reader.readMessage(value,proto.feast.serving.GetOnlineFeaturesResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector;
      reader.readMessage(value,proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.feast.serving.GetOnlineFeaturesResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    feast_types_Value_pb.Value.toObject, includeInstance),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    eventTimestampsList: jspb.Message.toObjectList(msg.getEventTimestampsList(),
    google_protobuf_timestamp_pb.Timestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector;
  return proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new feast_types_Value_pb.Value;
      reader.readMessage(value,feast_types_Value_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.feast.serving.FieldStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatuses(values[i]);
      }
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.addEventTimestamps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      feast_types_Value_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getEventTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated feast.types.Value values = 1;
 * @return {!Array<!proto.feast.types.Value>}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.feast.types.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, feast_types_Value_pb.Value, 1));
};


/**
 * @param {!Array<!proto.feast.types.Value>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
*/
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.feast.types.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.types.Value}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.feast.types.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated FieldStatus statuses = 2;
 * @return {!Array<!proto.feast.serving.FieldStatus>}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.feast.serving.FieldStatus>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.feast.serving.FieldStatus>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.feast.serving.FieldStatus} value
 * @param {number=} opt_index
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated google.protobuf.Timestamp event_timestamps = 3;
 * @return {!Array<!proto.google.protobuf.Timestamp>}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.getEventTimestampsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Timestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Timestamp>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
*/
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.setEventTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Timestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Timestamp}
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.addEventTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Timestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector.prototype.clearEventTimestampsList = function() {
  return this.setEventTimestampsList([]);
};


/**
 * optional GetOnlineFeaturesResponseMetadata metadata = 1;
 * @return {?proto.feast.serving.GetOnlineFeaturesResponseMetadata}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.getMetadata = function() {
  return /** @type{?proto.feast.serving.GetOnlineFeaturesResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.feast.serving.GetOnlineFeaturesResponseMetadata, 1));
};


/**
 * @param {?proto.feast.serving.GetOnlineFeaturesResponseMetadata|undefined} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse} returns this
*/
proto.feast.serving.GetOnlineFeaturesResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FeatureVector results = 2;
 * @return {!Array<!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector>}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector, 2));
};


/**
 * @param {!Array<!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector>} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse} returns this
*/
proto.feast.serving.GetOnlineFeaturesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.feast.serving.GetOnlineFeaturesResponse.FeatureVector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional bool status = 3;
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponse} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.feast.serving.GetOnlineFeaturesResponseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feast.serving.GetOnlineFeaturesResponseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureNames: (f = msg.getFeatureNames()) && proto.feast.serving.FeatureList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponseMetadata}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feast.serving.GetOnlineFeaturesResponseMetadata;
  return proto.feast.serving.GetOnlineFeaturesResponseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponseMetadata}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.feast.serving.FeatureList;
      reader.readMessage(value,proto.feast.serving.FeatureList.deserializeBinaryFromReader);
      msg.setFeatureNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feast.serving.GetOnlineFeaturesResponseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feast.serving.GetOnlineFeaturesResponseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureNames();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.feast.serving.FeatureList.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeatureList feature_names = 1;
 * @return {?proto.feast.serving.FeatureList}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.getFeatureNames = function() {
  return /** @type{?proto.feast.serving.FeatureList} */ (
    jspb.Message.getWrapperField(this, proto.feast.serving.FeatureList, 1));
};


/**
 * @param {?proto.feast.serving.FeatureList|undefined} value
 * @return {!proto.feast.serving.GetOnlineFeaturesResponseMetadata} returns this
*/
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.setFeatureNames = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feast.serving.GetOnlineFeaturesResponseMetadata} returns this
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.clearFeatureNames = function() {
  return this.setFeatureNames(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feast.serving.GetOnlineFeaturesResponseMetadata.prototype.hasFeatureNames = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.feast.serving.FieldStatus = {
  INVALID: 0,
  PRESENT: 1,
  NULL_VALUE: 2,
  NOT_FOUND: 3,
  OUTSIDE_MAX_AGE: 4
};

goog.object.extend(exports, proto.feast.serving);
