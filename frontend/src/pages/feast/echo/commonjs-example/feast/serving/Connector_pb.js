// source: feast/serving/Connector.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var feast_types_Value_pb = require('../../feast/types/Value_pb.js');
goog.object.extend(proto, feast_types_Value_pb);
var feast_types_EntityKey_pb = require('../../feast/types/EntityKey_pb.js');
goog.object.extend(proto, feast_types_EntityKey_pb);
var feast_serving_ServingService_pb = require('../../feast/serving/ServingService_pb.js');
goog.object.extend(proto, feast_serving_ServingService_pb);
goog.exportSymbol('proto.grpc.connector.ConnectorFeature', null, global);
goog.exportSymbol('proto.grpc.connector.ConnectorFeatureList', null, global);
goog.exportSymbol('proto.grpc.connector.OnlineReadRequest', null, global);
goog.exportSymbol('proto.grpc.connector.OnlineReadResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.connector.ConnectorFeature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc.connector.ConnectorFeature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.connector.ConnectorFeature.displayName = 'proto.grpc.connector.ConnectorFeature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.connector.ConnectorFeatureList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc.connector.ConnectorFeatureList.repeatedFields_, null);
};
goog.inherits(proto.grpc.connector.ConnectorFeatureList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.connector.ConnectorFeatureList.displayName = 'proto.grpc.connector.ConnectorFeatureList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.connector.OnlineReadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc.connector.OnlineReadRequest.repeatedFields_, null);
};
goog.inherits(proto.grpc.connector.OnlineReadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.connector.OnlineReadRequest.displayName = 'proto.grpc.connector.OnlineReadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.connector.OnlineReadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc.connector.OnlineReadResponse.repeatedFields_, null);
};
goog.inherits(proto.grpc.connector.OnlineReadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.connector.OnlineReadResponse.displayName = 'proto.grpc.connector.OnlineReadResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.connector.ConnectorFeature.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.connector.ConnectorFeature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.connector.ConnectorFeature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.ConnectorFeature.toObject = function(includeInstance, msg) {
  var f, obj = {
    reference: (f = msg.getReference()) && feast_serving_ServingService_pb.FeatureReferenceV2.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    value: (f = msg.getValue()) && feast_types_Value_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.connector.ConnectorFeature}
 */
proto.grpc.connector.ConnectorFeature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.connector.ConnectorFeature;
  return proto.grpc.connector.ConnectorFeature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.connector.ConnectorFeature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.connector.ConnectorFeature}
 */
proto.grpc.connector.ConnectorFeature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new feast_serving_ServingService_pb.FeatureReferenceV2;
      reader.readMessage(value,feast_serving_ServingService_pb.FeatureReferenceV2.deserializeBinaryFromReader);
      msg.setReference(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new feast_types_Value_pb.Value;
      reader.readMessage(value,feast_types_Value_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.connector.ConnectorFeature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.connector.ConnectorFeature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.connector.ConnectorFeature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.ConnectorFeature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReference();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      feast_serving_ServingService_pb.FeatureReferenceV2.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      feast_types_Value_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional feast.serving.FeatureReferenceV2 reference = 1;
 * @return {?proto.feast.serving.FeatureReferenceV2}
 */
proto.grpc.connector.ConnectorFeature.prototype.getReference = function() {
  return /** @type{?proto.feast.serving.FeatureReferenceV2} */ (
    jspb.Message.getWrapperField(this, feast_serving_ServingService_pb.FeatureReferenceV2, 1));
};


/**
 * @param {?proto.feast.serving.FeatureReferenceV2|undefined} value
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
*/
proto.grpc.connector.ConnectorFeature.prototype.setReference = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
 */
proto.grpc.connector.ConnectorFeature.prototype.clearReference = function() {
  return this.setReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpc.connector.ConnectorFeature.prototype.hasReference = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.grpc.connector.ConnectorFeature.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
*/
proto.grpc.connector.ConnectorFeature.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
 */
proto.grpc.connector.ConnectorFeature.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpc.connector.ConnectorFeature.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional feast.types.Value value = 3;
 * @return {?proto.feast.types.Value}
 */
proto.grpc.connector.ConnectorFeature.prototype.getValue = function() {
  return /** @type{?proto.feast.types.Value} */ (
    jspb.Message.getWrapperField(this, feast_types_Value_pb.Value, 3));
};


/**
 * @param {?proto.feast.types.Value|undefined} value
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
*/
proto.grpc.connector.ConnectorFeature.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grpc.connector.ConnectorFeature} returns this
 */
proto.grpc.connector.ConnectorFeature.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpc.connector.ConnectorFeature.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc.connector.ConnectorFeatureList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.connector.ConnectorFeatureList.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.connector.ConnectorFeatureList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.connector.ConnectorFeatureList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.ConnectorFeatureList.toObject = function(includeInstance, msg) {
  var f, obj = {
    featurelistList: jspb.Message.toObjectList(msg.getFeaturelistList(),
    proto.grpc.connector.ConnectorFeature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.connector.ConnectorFeatureList}
 */
proto.grpc.connector.ConnectorFeatureList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.connector.ConnectorFeatureList;
  return proto.grpc.connector.ConnectorFeatureList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.connector.ConnectorFeatureList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.connector.ConnectorFeatureList}
 */
proto.grpc.connector.ConnectorFeatureList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpc.connector.ConnectorFeature;
      reader.readMessage(value,proto.grpc.connector.ConnectorFeature.deserializeBinaryFromReader);
      msg.addFeaturelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.connector.ConnectorFeatureList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.connector.ConnectorFeatureList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.connector.ConnectorFeatureList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.ConnectorFeatureList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeaturelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpc.connector.ConnectorFeature.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConnectorFeature featureList = 1;
 * @return {!Array<!proto.grpc.connector.ConnectorFeature>}
 */
proto.grpc.connector.ConnectorFeatureList.prototype.getFeaturelistList = function() {
  return /** @type{!Array<!proto.grpc.connector.ConnectorFeature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpc.connector.ConnectorFeature, 1));
};


/**
 * @param {!Array<!proto.grpc.connector.ConnectorFeature>} value
 * @return {!proto.grpc.connector.ConnectorFeatureList} returns this
*/
proto.grpc.connector.ConnectorFeatureList.prototype.setFeaturelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpc.connector.ConnectorFeature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpc.connector.ConnectorFeature}
 */
proto.grpc.connector.ConnectorFeatureList.prototype.addFeaturelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpc.connector.ConnectorFeature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc.connector.ConnectorFeatureList} returns this
 */
proto.grpc.connector.ConnectorFeatureList.prototype.clearFeaturelistList = function() {
  return this.setFeaturelistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc.connector.OnlineReadRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.connector.OnlineReadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.connector.OnlineReadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.connector.OnlineReadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.OnlineReadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitykeysList: jspb.Message.toObjectList(msg.getEntitykeysList(),
    feast_types_EntityKey_pb.EntityKey.toObject, includeInstance),
    view: jspb.Message.getFieldWithDefault(msg, 2, ""),
    featuresList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.connector.OnlineReadRequest}
 */
proto.grpc.connector.OnlineReadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.connector.OnlineReadRequest;
  return proto.grpc.connector.OnlineReadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.connector.OnlineReadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.connector.OnlineReadRequest}
 */
proto.grpc.connector.OnlineReadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new feast_types_EntityKey_pb.EntityKey;
      reader.readMessage(value,feast_types_EntityKey_pb.EntityKey.deserializeBinaryFromReader);
      msg.addEntitykeys(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setView(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.connector.OnlineReadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.connector.OnlineReadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.connector.OnlineReadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.OnlineReadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitykeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      feast_types_EntityKey_pb.EntityKey.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * repeated feast.types.EntityKey entityKeys = 1;
 * @return {!Array<!proto.feast.types.EntityKey>}
 */
proto.grpc.connector.OnlineReadRequest.prototype.getEntitykeysList = function() {
  return /** @type{!Array<!proto.feast.types.EntityKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, feast_types_EntityKey_pb.EntityKey, 1));
};


/**
 * @param {!Array<!proto.feast.types.EntityKey>} value
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
*/
proto.grpc.connector.OnlineReadRequest.prototype.setEntitykeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.feast.types.EntityKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feast.types.EntityKey}
 */
proto.grpc.connector.OnlineReadRequest.prototype.addEntitykeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.feast.types.EntityKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
 */
proto.grpc.connector.OnlineReadRequest.prototype.clearEntitykeysList = function() {
  return this.setEntitykeysList([]);
};


/**
 * optional string view = 2;
 * @return {string}
 */
proto.grpc.connector.OnlineReadRequest.prototype.getView = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
 */
proto.grpc.connector.OnlineReadRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string features = 3;
 * @return {!Array<string>}
 */
proto.grpc.connector.OnlineReadRequest.prototype.getFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
 */
proto.grpc.connector.OnlineReadRequest.prototype.setFeaturesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
 */
proto.grpc.connector.OnlineReadRequest.prototype.addFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc.connector.OnlineReadRequest} returns this
 */
proto.grpc.connector.OnlineReadRequest.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc.connector.OnlineReadResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.connector.OnlineReadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.connector.OnlineReadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.connector.OnlineReadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.OnlineReadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.grpc.connector.ConnectorFeatureList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.connector.OnlineReadResponse}
 */
proto.grpc.connector.OnlineReadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.connector.OnlineReadResponse;
  return proto.grpc.connector.OnlineReadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.connector.OnlineReadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.connector.OnlineReadResponse}
 */
proto.grpc.connector.OnlineReadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpc.connector.ConnectorFeatureList;
      reader.readMessage(value,proto.grpc.connector.ConnectorFeatureList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.connector.OnlineReadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.connector.OnlineReadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.connector.OnlineReadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.connector.OnlineReadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpc.connector.ConnectorFeatureList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConnectorFeatureList results = 1;
 * @return {!Array<!proto.grpc.connector.ConnectorFeatureList>}
 */
proto.grpc.connector.OnlineReadResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.grpc.connector.ConnectorFeatureList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpc.connector.ConnectorFeatureList, 1));
};


/**
 * @param {!Array<!proto.grpc.connector.ConnectorFeatureList>} value
 * @return {!proto.grpc.connector.OnlineReadResponse} returns this
*/
proto.grpc.connector.OnlineReadResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpc.connector.ConnectorFeatureList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpc.connector.ConnectorFeatureList}
 */
proto.grpc.connector.OnlineReadResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpc.connector.ConnectorFeatureList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc.connector.OnlineReadResponse} returns this
 */
proto.grpc.connector.OnlineReadResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


goog.object.extend(exports, proto.grpc.connector);
